# -*- coding: utf-8 -*-
"""AI_CHATBOT_WITH_NLP.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1JmQ_09uSQvTD2Yy-gRwE3dbx5Z3uSHkA
"""

#Install Necessary Libraries

!pip install spacy
!python -m spacy download en_core_web_sm

import spacy
from spacy.matcher import Matcher

# Load the SpaCy English language model
nlp = spacy.load("en_core_web_sm")

# Initialize the matcher for pattern matching
matcher = Matcher(nlp.vocab)

# Define patterns for user intents
patterns = {
    "greeting": [{"LOWER": {"IN": ["hello", "hi", "namaste"]}}],
    "indian_capital": [{"LOWER": {"IN": ["capital", "india"]}}],
    "indian_food": [{"LOWER": {"IN": ["famous", "food", "india"]}}],
    "exit": [{"LOWER": {"IN": ["bye", "exit", "quit"]}}],
}

# Add patterns to the matcher
for intent, pattern in patterns.items():
    matcher.add(intent, [pattern])

# Define responses for each intent
responses = {
    "greeting": "Hello! How can I assist you today?",
    "indian_capital": "The capital of India is New Delhi.",
    "indian_food": "India is famous for its diverse cuisines like biryani, butter chicken, dosa, and samosas!",
    "exit": "Goodbye! Have a great day!",
}

# Define the chatbot function
def chatbot_response(user_input):
    """
    Processes user input and returns an appropriate response based on predefined patterns.
    """
    # Process the user input using SpaCy
    doc = nlp(user_input.lower())  # Convert input to lowercase for consistency

    # Match patterns in the input text
    matches = matcher(doc)

    if matches:
        # Get the intent from the first match
        intent = nlp.vocab.strings[matches[0][0]]
        return responses.get(intent, "I'm sorry, I don't understand that.")
    else:
        return "I'm sorry, I don't understand that."

# Chatbot conversation loop
def chatbot():
    print("Chatbot: Hello! I'm your assistant. Ask me anything about India or type 'bye' to exit.")
    while True:
        user_input = input("You: ")
        response = chatbot_response(user_input)
        print(f"Chatbot: {response}")
        if user_input.lower() in ["bye", "exit", "quit"]:
            break

# Start the chatbot
if __name__ == "__main__":
    chatbot()